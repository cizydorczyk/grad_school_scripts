This script takes two fastq files - one to filter, and one containing reads to
remove. It parses both files, then iterates through each read object in the
file to filter and if the header of that read is not in a list of headers from
the fastq file with reads to remove, it is written to a new file. If a read
header is in the list of headers from the fastq file with reads to remove, it is
simply not written to the output file.

The script takes three arguments:

  toremovefastq: this is the fastq file with reads that should be removed

  fastq_file_to_filter: this is the fastq file that you want to be filtered

  outputfastqfile: this is the output file; does not have to exist prior to
    running the script
